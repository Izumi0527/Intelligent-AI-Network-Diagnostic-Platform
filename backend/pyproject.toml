[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-network-platform"
version = "1.0.0"
description = "AI智能网络故障分析平台"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "AI Network Platform Team"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.3.0",
]

# 修复hatchling构建配置
[tool.hatch.build.targets.wheel]
packages = ["app"]

dependencies = [
    "fastapi==0.115.12",
    "uvicorn==0.34.2",
    "pydantic==2.11.4",
    "pydantic-settings==2.9.1",
    "sse-starlette==1.6.5",
    "netmiko==4.5.0",
    "aiohttp==3.11.18",
    "python-dotenv==1.1.0",
    "httpx==0.28.1",
    "paramiko==3.5.1",
    "python-jose==3.4.0",
    "passlib==1.7.4",
    "bcrypt==4.3.0",
    "requests==2.32.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ["py39"]
line-length = 88
include = '\.pyi?$'

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --cov=app --cov-report=term-missing --cov-report=html"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "app/tests/*",
    "app/*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
